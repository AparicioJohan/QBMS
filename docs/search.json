[{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"qbms","dir":"Articles","previous_headings":"","what":"QBMS","title":"BreedBase Example","text":"Linking data management systems analytics important step breeding digitalization. Breeders can use R package Query Breeding Management System database (using BrAPI calls) help retrieve experiments data directly R statistical analyzing environment. Well, Breedbase supports BrAPI standard, QBMS functionalities work smoothly minor changes. example, need give special attention set_qbms_config parameters (check example ). Currently, functions supported working BreedBase, like get_program_studies, get_germplasm_data, list_trials filtered year!","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"breedbase","dir":"Articles","previous_headings":"","what":"BreedBase","title":"BreedBase Example","text":"Breedbase comprehensive breeding management analysis software. can used design field layouts, collect phenotypic information using tablets, support collection genotyping samples field, store large amounts high density genotypic information, provide Genomic Selection related analyses predictions.","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"brapi","dir":"Articles","previous_headings":"","what":"BrAPI","title":"BreedBase Example","text":"Breeding API (BrAPI) project effort enable interoperability among plant breeding databases. BrAPI standardized RESTful web service API specification communicating plant breeding data. community driven standard free used anyone interested plant breeding data management.","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"BreedBase Example","text":"can find set Breedbase based servers available several crops accessible authentication required listed BrAPI website following page group Boyce Thompson Institute (BTI), discovery innovation life sciences: https://brapi.org/servers.","code":"install.packages(\"remotes\") remotes::install_github(\"icarda-git/QBMS\")"},{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"BreedBase Example","text":"","code":"# load the QBMS library library(QBMS)  # Cassava BreedBase server set_qbms_config(\"https://cassavabase.org/brapi/v1/calls/\",                  path = \"\", time_out = 300, no_auth = TRUE, engine = \"breedbase\")  # list supported crops in the current bms server list_crops()  # select a crop by name set_crop(\"Cassava\")  # list all breeding programs in the selected crop list_programs()  # select a breeding program by name set_program(\"IITA\")  # list all studies/trials in the selected program list_trials()  # select a specific study/trial by name set_trial(\"20_Abuja\")  # get observation variable ontology in the selected study/trial ontology <- get_trial_obs_ontology()  # list all environments/locations information in the selected study/trial list_studies()  # select a specific environment/location by name set_study(\"20NCRP12yrtAB\")  # select a specific study by location name (first match) studies <- list_studies() set_study(studies[studies$locationName == \"Abuja\", \"studyName\"][1])  # retrieve general information, data, and germplasm list of the selected environment/location info <- get_study_info() data <- get_study_data() germplasm <- get_germplasm_list()  # retrieve multi-environment trial data of the selected study/trial MET <- get_trial_data()"},{"path":"https://github.com/icarda-git/QBMS/articles/breedbase_example.html","id":"troubleshooting-the-installation","dir":"Articles","previous_headings":"","what":"Troubleshooting the installation","title":"BreedBase Example","text":"installation QBMS generates errors saying existing packages removed, can try quit R session, try start R administrator (Windows) SUDO mode (Linux/Ubuntu) try installing . get error related packages built current version R, updating packages doesn’t help, can consider overriding error following code. Note: might help install QBMS may result problems. possible, ’s best resolve errors rather ignoring .","code":"Sys.setenv(\"R_REMOTES_NO_ERRORS_FROM_WARNINGS\" = TRUE)  remotes::install_github(\"icarda-git/QBMS\", upgrade = \"always\")"},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"qbms","dir":"Articles","previous_headings":"","what":"QBMS","title":"QBMS Tutorial","text":"Linking data management systems analytics important step breeding digitalization. Breeders can use R package Query Breeding Management System database (using BrAPI calls) help retrieve experiments data directly R statistical analyzing environment. Author Maintainer: Khaled Al-Shamaa <k.el-shamaa () cgiar (dot) org> Contributor: Mariano Omar CRIMI <m.crimi () cgiar (dot) org> Contributor: Zakaria Kehel <z.kehel () cgiar (dot) org> Copyright Holder: International Center Agricultural Research Dry Areas (ICARDA)","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"breeding-management-system","dir":"Articles","previous_headings":"QBMS","what":"Breeding Management System","title":"QBMS Tutorial","text":"Breeding Management System (BMS) information management system developed Integrated Breeding Platform help breeders manage breeding process, programme planning decision-making. BMS customizable crop breeding programs, comes pre-loaded curated ontology terms many crops (bean, cassava, chickpea, cowpea, groundnut, maize, rice, sorghum, soybean, wheat, others). BMS available cloud application, can installed local remote servers accessed multiple users.","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"brapi","dir":"Articles","previous_headings":"QBMS","what":"BrAPI","title":"QBMS Tutorial","text":"Breeding API (BrAPI) project effort enable interoperability among plant breeding databases. BrAPI standardized RESTful web service API specification communicating plant breeding data. community driven standard free used anyone interested plant breeding data management.","code":""},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"install","dir":"Articles","previous_headings":"QBMS","what":"Install","title":"QBMS Tutorial","text":"already active BMS user, can contact IBP support get access trial BMS server.","code":"install.packages(\"remotes\") remotes::install_github(\"icarda-git/QBMS\")"},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"example","dir":"Articles","previous_headings":"QBMS","what":"Example","title":"QBMS Tutorial","text":"","code":"# load the QBMS library library(QBMS)  # config your BMS connection (by providing your BMS login page URL) set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench/controller/auth/login\")  # login using your BMS account (interactive mode) # or pass your BMS username and password as parameters (batch mode) login_bms()  # list supported crops in the current bms server list_crops()  # select a crop by name set_crop(\"maize\")  # list all breeding programs in the selected crop list_programs()  # select a breeding program by name set_program(\"MC Maize\")  # list all studies/trials in the selected program list_trials()  # filtered by year of starting date list_trials(2020)  # select a specific study/trial by name set_trial(\"2018 PVT\")  # get observation variable ontology in the selected study/trial ontology <- get_trial_obs_ontology()  # list all environments/locations information in the selected study/trial list_studies()  # select a specific environment/location by name set_study(\"2018 PVT Environment Number 1\")  # select a specific study by location name (first match) studies <- list_studies() set_study(studies[studies$locationName == \"BASF Bremen\", \"studyName\"][1])  # retrieve data, general information, and germplasm list of the selected environment/location data <- get_study_data() info <- get_study_info() germplasm <- get_germplasm_list()  # get the pedigree table pedigree_table <- get_pedigree_table(germplasm, \"germplasmName\", \"pedigree\")  # retrieve multi-environment trial data of the selected study/trial MET <- get_trial_data()  # retrieve all environments/locations information in the selected program program_studies <- get_program_studies()  # retrieve observations data of given germplasm aggregated from all trials in the selected program germplasm_observations <- get_germplasm_data(\"BASFCORN-2-1\")"},{"path":"https://github.com/icarda-git/QBMS/articles/tutorial.html","id":"troubleshooting-the-installation","dir":"Articles","previous_headings":"QBMS","what":"Troubleshooting the installation","title":"QBMS Tutorial","text":"installation QBMS generates errors saying existing packages removed, can try quit R session, try start R administrator (Windows) SUDO mode (Linux/Ubuntu) try installing . get error related packages built current version R, updating packages doesn’t help, can consider overriding error following code. Note: might help install QBMS may result problems. possible, ’s best resolve errors rather ignoring .","code":"Sys.setenv(\"R_REMOTES_NO_ERRORS_FROM_WARNINGS\" = TRUE)  remotes::install_github(\"icarda-git/QBMS\", upgrade = \"always\")"},{"path":"https://github.com/icarda-git/QBMS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Khaled Al-Shamaa. Author, maintainer. Mariano Omar Crimi. Contributor. Zakaria Kehel. Contributor. ICARDA. Copyright holder.","code":""},{"path":"https://github.com/icarda-git/QBMS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Al-Shamaa K (2022). QBMS: Query Breeding Management System 'BMS'. R package version 0.7.0, https://github.com/icarda-git/QBMS.","code":"@Manual{,   title = {QBMS: Query the Breeding Management System 'BMS'},   author = {Khaled Al-Shamaa},   year = {2022},   note = {R package version 0.7.0},   url = {https://github.com/icarda-git/QBMS}, }"},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Query the Breeding Management System BMS","text":"Linking data management systems analytics important step breeding digitalization. Breeders can use R package Query Breeding Management System database (using BrAPI calls) help retrieve experiments data directly R statistical analyzing environment. Author Maintainer: Khaled Al-Shamaa <k.el-shamaa () cgiar (dot) org> Contributor: Mariano Omar CRIMI <m.crimi () cgiar (dot) org> Contributor: Zakaria Kehel <z.kehel () cgiar (dot) org> Copyright Holder: International Center Agricultural Research Dry Areas (ICARDA)","code":""},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"breeding-management-system","dir":"","previous_headings":"","what":"Breeding Management System","title":"Query the Breeding Management System BMS","text":"Breeding Management System (BMS) information management system developed Integrated Breeding Platform help breeders manage breeding process, programme planning decision-making. BMS customizable crop breeding programs, comes pre-loaded curated ontology terms many crops (bean, cassava, chickpea, cowpea, groundnut, maize, rice, sorghum, soybean, wheat, others). BMS available cloud application, can installed local remote servers accessed multiple users.","code":""},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"brapi","dir":"","previous_headings":"","what":"BrAPI","title":"Query the Breeding Management System BMS","text":"Breeding API (BrAPI) project effort enable interoperability among plant breeding databases. BrAPI standardized RESTful web service API specification communicating plant breeding data. community driven standard free used anyone interested plant breeding data management.","code":""},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query the Breeding Management System BMS","text":"already active BMS user, can contact IBP support get access trial BMS server.","code":"install.packages(\"QBMS\")"},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Query the Breeding Management System BMS","text":"get bug fix use feature development version, can install development version QBMS GitHub.","code":"install.packages(\"remotes\") remotes::install_github(\"icarda-git/QBMS\")"},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Query the Breeding Management System BMS","text":"","code":"# load the QBMS library library(QBMS)  # config your BMS connection (by providing your BMS login page URL) set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench/controller/auth/login\")  # login using your BMS account (interactive mode) # or pass your BMS username and password as parameters (batch mode) login_bms()  # list supported crops in the current bms server list_crops()  # select a crop by name set_crop(\"maize\")  # list all breeding programs in the selected crop list_programs()  # select a breeding program by name set_program(\"MC Maize\")  # list all studies/trials in the selected program list_trials()  # filtered by year of starting date list_trials(2020)  # select a specific study/trial by name set_trial(\"2018 PVT\")  # get observation variable ontology in the selected study/trial ontology <- get_trial_obs_ontology()  # list all environments/locations information in the selected study/trial list_studies()  # select a specific environment/location by name set_study(\"2018 PVT Environment Number 1\")  # select a specific study by location name (first match) studies <- list_studies() set_study(studies[studies$locationName == \"BASF Bremen\", \"studyName\"][1])  # retrieve data, general information, and germplasm list of the selected environment/location data <- get_study_data() info <- get_study_info() germplasm <- get_germplasm_list()  # get the pedigree table pedigree_table <- get_pedigree_table(germplasm, \"germplasmName\", \"pedigree\")  # retrieve multi-environment trial data of the selected study/trial MET <- get_trial_data()  # retrieve all environments/locations information in the selected program program_studies <- get_program_studies()  # retrieve observations data of given germplasm aggregated from all trials in the selected program germplasm_observations <- get_germplasm_data(\"BASFCORN-2-1\")"},{"path":"https://github.com/icarda-git/QBMS/index.html","id":"troubleshooting-the-installation","dir":"","previous_headings":"","what":"Troubleshooting the installation","title":"Query the Breeding Management System BMS","text":"installation QBMS generates errors saying existing packages removed, can try quit R session, try start R administrator (Windows) SUDO mode (Linux/Ubuntu) try installing . get error related packages built current version R, updating packages doesn’t help, can consider overriding error following code. Note: might help install QBMS may result problems. possible, ’s best resolve errors rather ignoring .","code":"Sys.setenv(\"R_REMOTES_NO_ERRORS_FROM_WARNINGS\" = TRUE)  remotes::install_github(\"icarda-git/QBMS\", upgrade = \"always\")"},{"path":"https://github.com/icarda-git/QBMS/reference/brapi_get_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used for core BrAPI GET calls — brapi_get_call","title":"Internal function used for core BrAPI GET calls — brapi_get_call","text":"function created *internal use * cal BrAPI GET method retrieve rough response data send back results. function take care pagination, authentication, encoding, compress, decode JSON response, etc.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/brapi_get_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used for core BrAPI GET calls — brapi_get_call","text":"","code":"brapi_get_call(call_url, page = 0, nested = TRUE)"},{"path":"https://github.com/icarda-git/QBMS/reference/brapi_get_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function used for core BrAPI GET calls — brapi_get_call","text":"call_url BrAPI URL call GET method page Page number retrieve case multi-paged results (default 0) nested FALSE, retrieved JSON data flatten (default TRUE)","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/brapi_get_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function used for core BrAPI GET calls — brapi_get_call","text":"result object returned JSON API response","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/brapi_get_call.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function used for core BrAPI GET calls — brapi_get_call","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/build_pedigree_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Building Pedigree Table Recursively — build_pedigree_table","title":"Building Pedigree Table Recursively — build_pedigree_table","text":"Internal helping function build pedigree table recursively.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/build_pedigree_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Building Pedigree Table Recursively — build_pedigree_table","text":"","code":"build_pedigree_table(   geno_list = NULL,   pedigree_list = NULL,   pedigree_df = NULL )"},{"path":"https://github.com/icarda-git/QBMS/reference/build_pedigree_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building Pedigree Table Recursively — build_pedigree_table","text":"geno_list List genotypes/germplasms names. pedigree_list List associated pedigree strings. pedigree_df Pedigree data.frame per previous call/iteration.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/build_pedigree_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building Pedigree Table Recursively — build_pedigree_table","text":"data.frame three columns correspond identifiers individual,         female parent male parent, respectively.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/build_pedigree_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Building Pedigree Table Recursively — build_pedigree_table","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/debug_qbms.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug internal QBMS status object — debug_qbms","title":"Debug internal QBMS status object — debug_qbms","text":"Return internal QBMS status object debugging","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/debug_qbms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug internal QBMS status object — debug_qbms","text":"","code":"debug_qbms()"},{"path":"https://github.com/icarda-git/QBMS/reference/debug_qbms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Debug internal QBMS status object — debug_qbms","text":"environment object package config status","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/debug_qbms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Debug internal QBMS status object — debug_qbms","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/debug_qbms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Debug internal QBMS status object — debug_qbms","text":"","code":"obj <- debug_qbms() obj$config #> $crop #> NULL #>  obj$state #> $token #> NULL #>"},{"path":"https://github.com/icarda-git/QBMS/reference/get_crop_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of locations information of the current selected crop — get_crop_locations","title":"Get the list of locations information of the current selected crop — get_crop_locations","text":"function retrieve locations information current active crop configured internal state object using `set_crop()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_crop_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of locations information of the current selected crop — get_crop_locations","text":"","code":"get_crop_locations()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_crop_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of locations information of the current selected crop — get_crop_locations","text":"data frame locations information","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_crop_locations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of locations information of the current selected crop — get_crop_locations","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the observations data of a given germplasm name — get_germplasm_data","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"function retrieve observations data current active study configured internal state object using `set_study()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"","code":"get_germplasm_data(germplasm_name)"},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"germplasm_name name germplasm","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"data frame germplasm observations data aggregate trials","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the observations data of a given germplasm name — get_germplasm_data","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # retrive observations data of a given germplasm aggregated from all trials germplasm_observations <- get_germplasm_data(\"BASFCORN-2-1\") }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the germplasm list of the current active study — get_germplasm_list","title":"Get the germplasm list of the current active study — get_germplasm_list","text":"function retrieve germplasm list current active study configured internal state object using `set_study()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the germplasm list of the current active study — get_germplasm_list","text":"","code":"get_germplasm_list()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the germplasm list of the current active study — get_germplasm_list","text":"data frame study germplasm list","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the germplasm list of the current active study — get_germplasm_list","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_germplasm_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the germplasm list of the current active study — get_germplasm_list","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\")  # retrieve the germplasm list of the selected environment/location germplasm <- get_germplasm_list() }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_login_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Login pop-up window — get_login_details","title":"Login pop-up window — get_login_details","text":"Build GUI pop-window using Tcl/Tk insert BMS username password","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_login_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Login pop-up window — get_login_details","text":"","code":"get_login_details()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_login_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Login pop-up window — get_login_details","text":"vector inserted username password","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_login_details.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Login pop-up window — get_login_details","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Direct Parents — get_parents","title":"Get Direct Parents — get_parents","text":"Internal helping function split given pedigree string provides parentage cultivar obtained, get pedigrees direct parents.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Direct Parents — get_parents","text":"","code":"get_parents(pedigree)"},{"path":"https://github.com/icarda-git/QBMS/reference/get_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Direct Parents — get_parents","text":"pedigree String provide parentage cultivar obtained.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Direct Parents — get_parents","text":"Vector two items, direct female male parents.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_parents.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Direct Parents — get_parents","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Pedigree Table — get_pedigree_table","title":"Get the Pedigree Table — get_pedigree_table","text":"Get pedigree table starting current germplasm list associated pedigree string provides parentage cultivar obtained.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Pedigree Table — get_pedigree_table","text":"","code":"get_pedigree_table(   data,   geno_column = \"germplasmName\",   pedigree_column = \"pedigree\" )"},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Pedigree Table — get_pedigree_table","text":"data germplasm dataset data.frame. geno_column name column identifies genotype/germplasm names. pedigree_column name column identifies pedigree strings.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Pedigree Table — get_pedigree_table","text":"data.frame three columns correspond identifiers individual,         female parent male parent, respectively. row giving pedigree         individual appears row individual appears parent.         Founders use NA parental columns.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the Pedigree Table — get_pedigree_table","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_pedigree_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Pedigree Table — get_pedigree_table","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\")  # retrieve the germplasm list of the selected environment/location germplasm <- get_germplasm_list()  pedigree_table <- get_pedigree_table(germplasm, \"germplasmName\", \"pedigree\")  ############################# # nadiv package way # library(nadiv)  # get additive relationship matrix in sparse matrix format # A <- nadiv::makeA(pedigree_table)  # get A inverse matrix using base R function # AINV <- solve(as.matrix(A))  ############################# # ASReml-R package way # library(asreml)  # represent A inverse matrix in efficient way using i,j index and Ainverse value # actual genotype names of any given index are in the attr(ainv, \"rowNames\") # ainv <- asreml::ainverse(pedigree_table)  ############################# # dummy data set for testing test <- data.frame(genotype = c(\"X\", \"Y\"),                    pedigree = c(\"A//B/D/2/C\", \"B/C/3/A//B/C/2/D\"))  pedigree_table <- get_pedigree_table(test, \"genotype\", \"pedigree\") }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of trials studies locations information of the current selected program — get_program_studies","title":"Get the list of trials studies locations information of the current selected program — get_program_studies","text":"function retrieve environments/locations information trials studies current active program configured internal state object using `set_program()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of trials studies locations information of the current selected program — get_program_studies","text":"","code":"get_program_studies()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of trials studies locations information of the current selected program — get_program_studies","text":"data frame locations information study program trials","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_studies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of trials studies locations information of the current selected program — get_program_studies","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of trials studies locations information of the current selected program — get_program_studies","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # retrive all environments/locations information in the selected program studies/trials program_studies <- get_program_studies() }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used to retrieve the rough list of trials — get_program_trials","title":"Internal function used to retrieve the rough list of trials — get_program_trials","text":"function created *internal use * retrieve rough list trials pre-selected (.e. currently active) crop breeding program combination already configured internal state object using `set_crop()` `set_program()` functions respectively.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used to retrieve the rough list of trials — get_program_trials","text":"","code":"get_program_trials()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function used to retrieve the rough list of trials — get_program_trials","text":"list trials information","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_program_trials.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function used to retrieve the rough list of trials — get_program_trials","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the observations data of the current active study — get_study_data","title":"Get the observations data of the current active study — get_study_data","text":"function retrieve observations data current active study configured internal state object using `set_study()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the observations data of the current active study — get_study_data","text":"","code":"get_study_data()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the observations data of the current active study — get_study_data","text":"data frame study observations data","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the observations data of the current active study — get_study_data","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the observations data of the current active study — get_study_data","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\")  # retrieve the data of the selected environment/location data <- get_study_data() }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the details/metadata of the current active study — get_study_info","title":"Get the details/metadata of the current active study — get_study_info","text":"function retrieve details/metadata current active study configured internal state object using `set_study()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the details/metadata of the current active study — get_study_info","text":"","code":"get_study_info()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the details/metadata of the current active study — get_study_info","text":"data frame study details/metadata","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the details/metadata of the current active study — get_study_info","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_study_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the details/metadata of the current active study — get_study_info","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\")  # retrieve the general information of the selected environment/location info <- get_study_info() }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the observations data of the current active trial — get_trial_data","title":"Get the observations data of the current active trial — get_trial_data","text":"function retrieve observations data current active trial (.e. including studies within) configured internal state object using `set_trial()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the observations data of the current active trial — get_trial_data","text":"","code":"get_trial_data()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the observations data of the current active trial — get_trial_data","text":"data frame trial observations data","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the observations data of the current active trial — get_trial_data","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the observations data of the current active trial — get_trial_data","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\")  # retrive multi-environment trial data MET <- get_trial_data() }"},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_obs_ontology.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","title":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","text":"function retrieve traits ontology/metadata current active trial configured internal state object using `set_trial()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_obs_ontology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","text":"","code":"get_trial_obs_ontology()"},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_obs_ontology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","text":"data frame traits ontology/metadata","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_obs_ontology.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/get_trial_obs_ontology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the traits ontology/metadata of the current active trial — get_trial_obs_ontology","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # get observation variable ontology ontology <- get_trial_obs_ontology() }"},{"path":"https://github.com/icarda-git/QBMS/reference/list_crops.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of supported crops — list_crops","title":"Get the list of supported crops — list_crops","text":"Get list supported crops","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_crops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of supported crops — list_crops","text":"","code":"list_crops()"},{"path":"https://github.com/icarda-git/QBMS/reference/list_crops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of supported crops — list_crops","text":"list supported crops","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/list_crops.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of supported crops — list_crops","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_crops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of supported crops — list_crops","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  # list supported crops in the bms server list_crops() }"},{"path":"https://github.com/icarda-git/QBMS/reference/list_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of breeding programs names — list_programs","title":"Get the list of breeding programs names — list_programs","text":"function retrieve breeding programs list current active crop configured internal configuration object using `set_crop()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of breeding programs names — list_programs","text":"","code":"list_programs()"},{"path":"https://github.com/icarda-git/QBMS/reference/list_programs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of breeding programs names — list_programs","text":"list breeding programs names","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/list_programs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of breeding programs names — list_programs","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of breeding programs names — list_programs","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # list existing breeding programs list_programs() }"},{"path":"https://github.com/icarda-git/QBMS/reference/list_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of studies in the current active trial — list_studies","title":"Get the list of studies in the current active trial — list_studies","text":"function retrieve studies list current active trial configured internal state object using `set_trial()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of studies in the current active trial — list_studies","text":"","code":"list_studies()"},{"path":"https://github.com/icarda-git/QBMS/reference/list_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of studies in the current active trial — list_studies","text":"list study location names","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/list_studies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of studies in the current active trial — list_studies","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of studies in the current active trial — list_studies","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # list all environments/locations information in the selected study/trial list_studies() }"},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of trials in the current active breeding program — list_trials","title":"Get the list of trials in the current active breeding program — list_trials","text":"function retrieve trials list current active breeding program configured internal state object using `set_program()` function.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of trials in the current active breeding program — list_trials","text":"","code":"list_trials(year = NULL)"},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the list of trials in the current active breeding program — list_trials","text":"year starting year filter list trials (optional, default NULL)","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of trials in the current active breeding program — list_trials","text":"list trials names","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the list of trials in the current active breeding program — list_trials","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/list_trials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of trials in the current active breeding program — list_trials","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # list all studies/trials in the selected program list_trials()  # filter listed studies/trials by year list_trials(2020) }"},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":null,"dir":"Reference","previous_headings":"","what":"Login to the BMS server — login_bms","title":"Login to the BMS server — login_bms","text":"Connect BMS server. username password parameters missing, login window pop-insert username password. connection parameters (.e. server IP domain, connection port, API path, connection protocol e.g. http://) retrieve qbms_config list. function update qbms_config list (brapi connection object con key) qbms_state list (token value token key).","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Login to the BMS server — login_bms","text":"","code":"login_bms(username = NULL, password = NULL)"},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Login to the BMS server — login_bms","text":"username BMS username (optional, default NULL) password BMS password (optional, default NULL)","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Login to the BMS server — login_bms","text":"return value","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Login to the BMS server — login_bms","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/login_bms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Login to the BMS server — login_bms","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms() }"},{"path":"https://github.com/icarda-git/QBMS/reference/rbindlistx.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes one data.table from a list of many — rbindlistx","title":"Makes one data.table from a list of many — rbindlistx","text":".call(\"rbind\", x) data.frames, much faster.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/rbindlistx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes one data.table from a list of many — rbindlistx","text":"","code":"rbindlistx(x)"},{"path":"https://github.com/icarda-git/QBMS/reference/rbindlistx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes one data.table from a list of many — rbindlistx","text":"x list containing data.table, data.frame list objects.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/rbindlistx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes one data.table from a list of many — rbindlistx","text":"unkeyed data.table containing concatenation items passed .","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/rbindx.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine data.frames by row, filling in missing columns — rbindx","title":"Combine data.frames by row, filling in missing columns — rbindx","text":"rbinds list data frames filling missing columns NA","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/rbindx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine data.frames by row, filling in missing columns — rbindx","text":"","code":"rbindx(..., dfs = list(...))"},{"path":"https://github.com/icarda-git/QBMS/reference/rbindx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine data.frames by row, filling in missing columns — rbindx","text":"... first argument data frame. dfs input data frames row bind together.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/rbindx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine data.frames by row, filling in missing columns — rbindx","text":"single data frame","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the current active crop — set_crop","title":"Set the current active crop — set_crop","text":"function update current active crop internal configuration object (including brapi connection object).","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the current active crop — set_crop","text":"","code":"set_crop(crop_name)"},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the current active crop — set_crop","text":"crop_name name crop","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the current active crop — set_crop","text":"return value","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the current active crop — set_crop","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the current active crop — set_crop","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\") }"},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the current active breeding program — set_program","title":"Set the current active breeding program — set_program","text":"function update current active breeding program internal state object using programDbId retrieved BMS associated given program_name parameter.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the current active breeding program — set_program","text":"","code":"set_program(program_name)"},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the current active breeding program — set_program","text":"program_name name breeding program","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the current active breeding program — set_program","text":"return value","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the current active breeding program — set_program","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_program.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the current active breeding program — set_program","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\") }"},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure BMS server settings — set_qbms_config","title":"Configure BMS server settings — set_qbms_config","text":"Set connection configuration BMS server","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure BMS server settings — set_qbms_config","text":"","code":"set_qbms_config(   url = \"http://localhost/ibpworkbench/controller/auth/login\",   path = \"bmsapi\",   page_size = 1000,   time_out = 120,   no_auth = FALSE,   engine = \"bms\" )"},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure BMS server settings — set_qbms_config","text":"url URL BMS login page (default \"http://localhost/ibpworkbench/\") path BMS API path (default \"bmsapi\") page_size Page size (default 1000) time_out Number seconds wait response giving (default 10) no_auth TRUE server require authentication/login (default FALSE) engine Backend database (qbms default, breedbase)","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure BMS server settings — set_qbms_config","text":"return value","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Configure BMS server settings — set_qbms_config","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_qbms_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure BMS server settings — set_qbms_config","text":"","code":"set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")"},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the current active study by location name — set_study","title":"Set the current active study by location name — set_study","text":"function update current active study internal state object using studyDbId retrieved BMS associated given study_name parameter.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the current active study by location name — set_study","text":"","code":"set_study(study_name)"},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the current active study by location name — set_study","text":"study_name name study","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the current active study by location name — set_study","text":"return value","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the current active study by location name — set_study","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the current active study by location name — set_study","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\")  # select a specific environment/location dataset set_study(\"2018 PVT Environment Number 1\") }"},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the current active trial — set_trial","title":"Set the current active trial — set_trial","text":"function update current active trial internal state object using trialDbId retrieved BMS associated given trial_name parameter.","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the current active trial — set_trial","text":"","code":"set_trial(trial_name)"},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the current active trial — set_trial","text":"trial_name name trial","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the current active trial — set_trial","text":"return value","code":""},{"path":[]},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the current active trial — set_trial","text":"Khaled Al-Shamaa, k.el-shamaa@cgiar.org","code":""},{"path":"https://github.com/icarda-git/QBMS/reference/set_trial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the current active trial — set_trial","text":"","code":"if(interactive()) { # config your BMS connection set_qbms_config(\"https://www.bms-uat-test.net/ibpworkbench\")  # login using your BMS account (interactive mode) # you can pass BMS username and password as parameters (batch mode) login_bms()  set_crop(\"maize\")  # select a breeding program by name set_program(\"MC Maize\")  # select a specific study/trial by name set_trial(\"2018 PVT\") }"},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-070-2022-03-03","dir":"Changelog","previous_headings":"","what":"QBMS 0.7.0 2022-03-03","title":"QBMS 0.7.0 2022-03-03","text":"Add BreedBase support using BrAPI v1 calls. Add functionality get pedigree table starting germplasm dataset. Improve set_qbms_config generalize way getting server domain URL. Default timeout become 120 sec instead 10. Set default encoding HTTP content UTF-8.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-060-2021-10-08","dir":"Changelog","previous_headings":"","what":"QBMS 0.6.0 2021-10-08","title":"QBMS 0.6.0 2021-10-08","text":"Fix filter year functionality list_trials function. Fix get_germplasm_data replaced deprecated germplasm-search call. Minimize package dependencies (rbindx replaced plyr::rbind.fill, rbindlistx replaced data.table::rbindlist, use merge replace dplyr::left_join). Resolve compatibility issues BrAPI changes BMS version 19. Enable set connection time_out set_qbms_config function. Get entry type (test check) get_germplasm_list returned data frame.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-050-2021-07-08","dir":"Changelog","previous_headings":"","what":"QBMS 0.5.0 2021-07-08","title":"QBMS 0.5.0 2021-07-08","text":"Fix issue empty list get_germplasm_data returned results. Fix retrieving error study data! Enhance returned info get_program_studies function include study settings number test/check entries.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-041-2020-10-16","dir":"Changelog","previous_headings":"","what":"QBMS 0.4.1 2020-10-16","title":"QBMS 0.4.1 2020-10-16","text":"Simplify configuration required URL BMS login page. Improve performance internal get_program_trials function passing programDbId /trials GET call. Add debug_qbms function get internal config/state object.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-040-2020-07-03","dir":"Changelog","previous_headings":"","what":"QBMS 0.4.0 2020-07-03","title":"QBMS 0.4.0 2020-07-03","text":"Convert R package. Add set_qbms_config function setup connection configuration variables. Use double colon approach functions external packages. Fix deprecated API call get_trial_obs_ontology function.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-031-2020-06-09","dir":"Changelog","previous_headings":"","what":"QBMS 0.3.1 2020-06-09","title":"QBMS 0.3.1 2020-06-09","text":"Fix “get_trial_data” function bug one study location. Function “list_studies” returns studyName also, function “set_study” input studyName now. Simplify “get_germplasm_list” function output getting rid nested lists. Deprecate “list_all_studies” function favor “get_program_studies” function.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-030-2020-06-02","dir":"Changelog","previous_headings":"","what":"QBMS 0.3.0 2020-06-02","title":"QBMS 0.3.0 2020-06-02","text":"Call BrAPI directly (.e. required “CIP-RIU/brapi” GitHub anymore). Add function get data current active trial (combined studies). Add function get list studies given germplasm used. Add function get specific germplasm data program trials. Handle BrAPI pagination proper way.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-020-2019-08-20","dir":"Changelog","previous_headings":"","what":"QBMS 0.2.0 2019-08-20","title":"QBMS 0.2.0 2019-08-20","text":"Adopt tidyverse style guide https://style.tidyverse.org/ Add functions documentation using roxygen2 format. Add basic error handling functions. Add function retrieve traits ontology trial.","code":""},{"path":"https://github.com/icarda-git/QBMS/news/index.html","id":"qbms-010-2019-07-24","dir":"Changelog","previous_headings":"","what":"QBMS 0.1.0 2019-07-24","title":"QBMS 0.1.0 2019-07-24","text":"Initial version.","code":""}]
